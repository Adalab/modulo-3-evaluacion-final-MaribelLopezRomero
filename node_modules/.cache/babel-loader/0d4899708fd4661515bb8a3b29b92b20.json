{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adalaber/Escritorio/Evaluacion Intermedia 3/version 2/Evaluacion intermedia version 3. router/src/components/App.js\";\nimport React from 'react';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/Fetch';\nimport CharacterList from './CharacterList';\nimport Filters from './Filter';\nimport { Route, Switch } from 'react-router-dom';\nimport CharacterDetail from './CharacterDetail';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      data: []\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  componentDidMount() {\n    getDataFromApi().then(data => {\n      console.log(data.results);\n      this.setState({\n        data: data.results\n      }, () => this.filter());\n    });\n  } //lifttin, evento de filtrado\n\n\n  handleInput(value) {\n    this.setState({\n      inputValue: value\n    }, () => this.filter());\n  }\n\n  filter() {\n    const filterMortyCard = this.state.data.filter(cardFiltred => cardFiltred.name.toLowerCase().includes(this.state.inputValue.toLowerCase()));\n    this.setState({\n      data: filterMortyCard\n    });\n  }\n\n  render() {\n    // // Pasamos los datos del archivo json a través del estado del componente y luego por props a su componente hijo\n    const MortyData = this.state.data;\n    const inputValue = this.state.imputValue;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(CharacterList, {\n            dataMortylist: MortyData // para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Filters, {\n            inputValue: inputValue,\n            handleInput: this.handleInput //props para que filer avise a app del evento\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:nickname\",\n          children: /*#__PURE__*/_jsxDEV(CharacterDetail, {\n            dataMortylist: MortyData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adalaber/Escritorio/Evaluacion Intermedia 3/version 2/Evaluacion intermedia version 3. router/src/components/App.js"],"names":["React","getDataFromApi","CharacterList","Filters","Route","Switch","CharacterDetail","App","Component","constructor","props","state","inputValue","data","handleInput","bind","filter","componentDidMount","then","console","log","results","setState","value","filterMortyCard","cardFiltred","name","toLowerCase","includes","render","MortyData","imputValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBhB,IAAAA,cAAc,GAAGiB,IAAjB,CAAuBL,IAAD,IAAU;AAC9BM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,OAAjB;AACA,WAAKC,QAAL,CACE;AACET,QAAAA,IAAI,EAAEA,IAAI,CAACQ;AADb,OADF,EAIE,MAAM,KAAKL,MAAL,EAJR;AAMD,KARD;AASD,GArB+B,CAuBhC;;;AACAF,EAAAA,WAAW,CAACS,KAAD,EAAQ;AACjB,SAAKD,QAAL,CACE;AACEV,MAAAA,UAAU,EAAEW;AADd,KADF,EAIE,MAAM,KAAKP,MAAL,EAJR;AAMD;;AAIDA,EAAAA,MAAM,GAAG;AACP,UAAMQ,eAAe,GAAG,KAAKb,KAAL,CAAWE,IAAX,CAAgBG,MAAhB,CAAwBS,WAAD,IAC7CA,WAAW,CAACC,IAAZ,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwC,KAAKjB,KAAL,CAAWC,UAAX,CAAsBe,WAAtB,EAAxC,CADsB,CAAxB;AAGA,SAAKL,QAAL,CAAc;AAAET,MAAAA,IAAI,EAACW;AAAP,KAAd;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,SAAS,GAAG,KAAKnB,KAAL,CAAWE,IAA7B;AACA,UAAMD,UAAU,GAAG,KAAKD,KAAL,CAAWoB,UAA9B;AACA,wBACE;AAAA,6BACA,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,kCACI,QAAC,aAAD;AACF,YAAA,aAAa,EAAED,SADb,CACwB;;AADxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAIA,QAAC,OAAD;AACE,YAAA,UAAU,EAAElB,UADd;AAEE,YAAA,WAAW,EAAE,KAAKE,WAFpB,CAEiC;;AAFjC;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAG,YAAd;AAAA,iCACA,QAAC,eAAD;AAAiB,YAAA,aAAa,EAAGgB;AAAjC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAkBD;;AAhE+B;;AAmElC,eAAevB,GAAf","sourcesContent":["import React from 'react';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/Fetch';\nimport CharacterList from './CharacterList';\nimport Filters from './Filter';\nimport { Route, Switch } from 'react-router-dom';\nimport CharacterDetail from './CharacterDetail';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      data: [],\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  componentDidMount() {\n    getDataFromApi().then((data) => {\n      console.log(data.results);\n      this.setState(\n        {\n          data: data.results,\n        },\n        () => this.filter()\n      );\n    });\n  }\n\n  //lifttin, evento de filtrado\n  handleInput(value) {\n    this.setState(\n      {\n        inputValue: value,\n      },\n      () => this.filter()\n    );\n  };\n\n  \n\n  filter() {\n    const filterMortyCard = this.state.data.filter((cardFiltred) =>\n      cardFiltred.name.toLowerCase().includes(this.state.inputValue.toLowerCase())\n    );\n    this.setState({ data:filterMortyCard });\n  }\n\n  render() {\n    // // Pasamos los datos del archivo json a través del estado del componente y luego por props a su componente hijo\n    const MortyData = this.state.data;\n    const inputValue = this.state.imputValue;\n    return (\n      <>\n      <Switch>\n        <Route exact path=\"/\">\n            <CharacterList\n          dataMortylist={MortyData} // para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n        />\n        <Filters\n          inputValue={inputValue}\n          handleInput={this.handleInput} //props para que filer avise a app del evento\n        />\n        </Route>\n        <Route path = \"/:nickname\">\n        <CharacterDetail dataMortylist= {MortyData}/>\n        </Route>\n      </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}