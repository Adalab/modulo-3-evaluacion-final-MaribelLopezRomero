{"ast":null,"code":"import _classCallCheck from\"/home/adalaber/Escritorio/Adalab/modulo-3-evaluacion-final-MaribelLopezRomero/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/adalaber/Escritorio/Adalab/modulo-3-evaluacion-final-MaribelLopezRomero/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/adalaber/Escritorio/Adalab/modulo-3-evaluacion-final-MaribelLopezRomero/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/adalaber/Escritorio/Adalab/modulo-3-evaluacion-final-MaribelLopezRomero/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/adalaber/Escritorio/Adalab/modulo-3-evaluacion-final-MaribelLopezRomero/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import'../stylesheets/App.scss';import getDataFromApi from'../services/Fetch';import CharacterList from'./CharacterList';import Filters from'./Filter';import{Route,Switch}from'react-router-dom';import CharacterDetail from'./CharacterDetail';import CharacterNotFound from'./CharacterNotFound';import Header from'./Header';import CharacterNotExist from'./CharacterNotExItst';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={inputValue:'',data:[],dataFilter:[],textAlert:''};_this.handleInput=_this.handleInput.bind(_assertThisInitialized(_this));_this.filter=_this.filter.bind(_assertThisInitialized(_this));_this.renderCharacterDetail=_this.renderCharacterDetail.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;getDataFromApi().then(function(data){console.log(data.results);_this2.setState({data:data.results},function(){return _this2.filter();});});}//evento de filtrado\n},{key:\"handleInput\",value:function handleInput(value){var _this3=this;this.setState({inputValue:value},function(){return _this3.filter();});}},{key:\"filter\",value:function filter(){var _this4=this;console.log(this.state.inputValue);var filterMortyCard=this.state.data.filter(function(cardFiltred){return cardFiltred.name.toLowerCase().includes(_this4.state.inputValue.toLowerCase());});this.setState({dataFilter:filterMortyCard});//Preguntar como hacer que funcione desde aqui y no desde app\nif(filterMortyCard.length===0){this.setState({textAlert:\"No hay ning\\xFAn personaje que coincida con la palabra \".concat(this.state.inputValue)});}}// pitamos la tarjeta de detalles, para ello en la rruta que queremos que aparezca declaramos la fucion que pinta los datos, despues con un find, decimos que compare la ruta que hemos puesto (nombre., nickname) con los datos dentro del array incial(name)\n},{key:\"renderCharacterDetail\",value:function renderCharacterDetail(props){console.log(props);var id=parseInt(props.match.params.id);var dataObj=this.state.data.find(function(cardDetail){return cardDetail.id===id;});if(dataObj){return/*#__PURE__*/_jsx(CharacterDetail,{data:dataObj});}else{return/*#__PURE__*/_jsx(CharacterNotExist,{});}}},{key:\"render\",value:function render(){// // Pasamos los datos del archivo json a través del estado del componente y luego por props a su componente hijo\nvar MortyDataFilter=this.state.dataFilter;var inputValue=this.state.imputValue;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/\",children:[/*#__PURE__*/_jsx(Filters,{inputValue:inputValue,handleInput:this.handleInput//props para que filer avise a app del evento\n}),this.state.dataFilter.length===0?/*#__PURE__*/_jsx(CharacterNotFound,{value:this.state.textAlert}):/*#__PURE__*/_jsx(CharacterList,{dataMortylist:MortyDataFilter// para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n})]}),/*#__PURE__*/_jsx(Route,{path:\"/:id\",render:this.renderCharacterDetail})]})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/adalaber/Escritorio/Adalab/modulo-3-evaluacion-final-MaribelLopezRomero/src/components/App.js"],"names":["React","getDataFromApi","CharacterList","Filters","Route","Switch","CharacterDetail","CharacterNotFound","Header","CharacterNotExist","App","props","state","inputValue","data","dataFilter","textAlert","handleInput","bind","filter","renderCharacterDetail","then","console","log","results","setState","value","filterMortyCard","cardFiltred","name","toLowerCase","includes","length","id","parseInt","match","params","dataObj","find","cardDetail","MortyDataFilter","imputValue","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/Fetch';\nimport CharacterList from './CharacterList';\nimport Filters from './Filter';\nimport { Route, Switch } from 'react-router-dom';\nimport CharacterDetail from './CharacterDetail';\nimport CharacterNotFound from './CharacterNotFound';\nimport Header from './Header';\nimport CharacterNotExist from './CharacterNotExItst';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      data: [],\n      dataFilter: [],\n      textAlert: '',\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.filter = this.filter.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n  }\n\n  componentDidMount() {\n    getDataFromApi().then((data) => {\n      console.log(data.results);\n      this.setState(\n        {\n          data: data.results,\n        },\n        () => this.filter()\n      );\n    });\n  }\n\n  //evento de filtrado\n  handleInput(value) {\n    this.setState(\n      {\n        inputValue: value,\n      },\n      () => this.filter()\n    );\n  }\n\n  filter() {\n    console.log(this.state.inputValue);\n    const filterMortyCard = this.state.data.filter((cardFiltred) =>\n      cardFiltred.name\n        .toLowerCase()\n        .includes(this.state.inputValue.toLowerCase())\n    );\n    this.setState({ dataFilter: filterMortyCard });\n    //Preguntar como hacer que funcione desde aqui y no desde app\n    if (filterMortyCard.length === 0) {\n      this.setState({\n        textAlert: `No hay ningún personaje que coincida con la palabra ${this.state.inputValue}`,\n      });\n    }\n  }\n\n  // pitamos la tarjeta de detalles, para ello en la rruta que queremos que aparezca declaramos la fucion que pinta los datos, despues con un find, decimos que compare la ruta que hemos puesto (nombre., nickname) con los datos dentro del array incial(name)\n  renderCharacterDetail(props) {\n    console.log(props);\n    const id = parseInt(props.match.params.id);\n    const dataObj = this.state.data.find((cardDetail) => {\n      return cardDetail.id === id;\n    });\n    if (dataObj) {\n      return <CharacterDetail data={dataObj} />;\n    } else {\n      return <CharacterNotExist />;\n    }\n  }\n\n  render() {\n    // // Pasamos los datos del archivo json a través del estado del componente y luego por props a su componente hijo\n    const MortyDataFilter = this.state.dataFilter;\n    const inputValue = this.state.imputValue;\n    return (\n      <>\n        <Header />\n        <Switch>\n          <Route exact path='/'>\n            <Filters\n              inputValue={inputValue}\n              handleInput={this.handleInput} //props para que filer avise a app del evento\n            />\n            {this.state.dataFilter.length === 0 ? (\n              <CharacterNotFound value={this.state.textAlert} />\n            ) : (\n              <CharacterList\n                dataMortylist={MortyDataFilter} // para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n              />\n            )}\n          </Route>\n          <Route path='/:id' render={this.renderCharacterDetail} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}