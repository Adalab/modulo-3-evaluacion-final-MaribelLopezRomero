{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adalaber/Escritorio/Evaluacion Intermedia 3/version 2/Evaluacion intermedia version 2/src/components/App.js\";\nimport React from 'react';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/Fetch';\nimport CharacterList from './CharacterList';\nimport Filters from './Filter';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      data: []\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.filter = this.filter.bind(this);\n  } //pintar la lista\n  // componentDidMount(){\n  //   getDataFromApi()\n  //   .then(data =>{\n  //     console.log(data)\n  //     this.setState({\n  //       data: data\n  //     })\n  //   })\n  // }\n\n\n  componentDidMount() {\n    getDataFromApi().then(data => {\n      console.log(data.results);\n      this.setState({\n        data: data.results\n      });\n    });\n  } //lifttin, evento de filtrado\n\n\n  handleInput(value) {\n    this.setState({\n      inputValue: value\n    }); //para filtrar\n    //   // const data = this.state.data\n    //   // if (this.state.inputvalue !== null) {\n    //   //   const mortyData = this.state.data;\n    //   //   const filterMortyCard = mortyData.filter((cardFiltred) =>\n    //   //     cardFiltred.name.toUpperCase().includes(value.toUpperCase())\n    //   //   );\n    //   //   this.setState({\n    //   //     data: filterMortyCard,\n    //   //   });\n    //   // }\n    //   // if (this.state.inputValue === '') {\n    //   //   this.setState({\n    //   //     data: [],\n    //   //   });\n    //   // }\n    //   // console.log (fecth.results);\n  }\n\n  filter() {\n    const mortyData = this.state.data;\n    const value = this.inputValue;\n    const filterMortyCard = mortyData.filter(cardFiltred => cardFiltred.name.toUpperCase().includes(value.toUpperCase())); // filterMortyCard = mortyData.filter((cardFiltred) => { return cardFiltred.name.toUpperCase().includes(value.toUpperCase())\n    // });\n\n    this.setState({\n      data: filterMortyCard\n    });\n    console.log(filterMortyCard);\n  } // No me lee el array!!!!\n\n\n  render() {\n    // // Pasamos los datos del archivo json a través del estado del componente y luego por props a su componente hijo\n    const MortyData = this.state.data;\n    const inputValue = this.state.imputValue;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CharacterList, {\n        dataMortylist: MortyData // para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n        //inputValue={inputValue} // para pasar a characteres list el estado\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        inputValue: inputValue,\n        handleInput: this.handleInput //props para que filer avise a app del evento\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adalaber/Escritorio/Evaluacion Intermedia 3/version 2/Evaluacion intermedia version 2/src/components/App.js"],"names":["React","getDataFromApi","CharacterList","Filters","App","Component","constructor","props","state","inputValue","data","handleInput","bind","filter","componentDidMount","then","console","log","results","setState","value","mortyData","filterMortyCard","cardFiltred","name","toUpperCase","includes","render","MortyData","imputValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,MAAL,GAAa,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAb;AACD,GAT+B,CAUhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEAE,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,cAAc,GAAGc,IAAjB,CAAuBL,IAAD,IAAU;AAC9BM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,OAAjB;AACA,WAAKC,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAEA,IAAI,CAACQ;AADC,OAAd;AAGD,KALD;AAMD,GA9B+B,CAgChC;;;AACAP,EAAAA,WAAW,CAACS,KAAD,EAAQ;AACjB,SAAKD,QAAL,CAAc;AACZV,MAAAA,UAAU,EAAEW;AADA,KAAd,EADiB,CAIjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDP,EAAAA,MAAM,GAAG;AACP,UAAMQ,SAAS,GAAG,KAAKb,KAAL,CAAWE,IAA7B;AACA,UAAMU,KAAK,GAAG,KAAKX,UAAnB;AACA,UAAMa,eAAe,GAAGD,SAAS,CAACR,MAAV,CAAkBU,WAAD,IACvCA,WAAW,CAACC,IAAZ,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCN,KAAK,CAACK,WAAN,EAAxC,CADsB,CAAxB,CAHO,CAMP;AACA;;AACA,SAAKN,QAAL,CAAc;AACZT,MAAAA,IAAI,EAAEY;AADM,KAAd;AAGAN,IAAAA,OAAO,CAACC,GAAR,CAAYK,eAAZ;AACD,GApE+B,CAoE9B;;;AAEFK,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,SAAS,GAAG,KAAKpB,KAAL,CAAWE,IAA7B;AACA,UAAMD,UAAU,GAAG,KAAKD,KAAL,CAAWqB,UAA9B;AACA,wBACE;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,aAAa,EAAED,SADjB,CAC4B;AAC1B;;AAFF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,OAAD;AACE,QAAA,UAAU,EAAEnB,UADd;AAEE,QAAA,WAAW,EAAE,KAAKE,WAFpB,CAEiC;;AAFjC;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,oBADF;AAaD;;AAvF+B;;AA0FlC,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/Fetch';\nimport CharacterList from './CharacterList';\nimport Filters from './Filter';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      data: [],\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.filter= this.filter.bind(this);\n  }\n  //pintar la lista\n\n  // componentDidMount(){\n  //   getDataFromApi()\n  //   .then(data =>{\n  //     console.log(data)\n  //     this.setState({\n  //       data: data\n  //     })\n  //   })\n\n  // }\n\n  componentDidMount() {\n    getDataFromApi().then((data) => {\n      console.log(data.results);\n      this.setState({\n        data: data.results,\n      });\n    });\n  }\n\n  //lifttin, evento de filtrado\n  handleInput(value) {\n    this.setState({\n      inputValue: value,\n    });\n    //para filtrar\n    //   // const data = this.state.data\n    //   // if (this.state.inputvalue !== null) {\n    //   //   const mortyData = this.state.data;\n    //   //   const filterMortyCard = mortyData.filter((cardFiltred) =>\n    //   //     cardFiltred.name.toUpperCase().includes(value.toUpperCase())\n    //   //   );\n    //   //   this.setState({\n    //   //     data: filterMortyCard,\n    //   //   });\n    //   // }\n    //   // if (this.state.inputValue === '') {\n    //   //   this.setState({\n    //   //     data: [],\n    //   //   });\n    //   // }\n    //   // console.log (fecth.results);\n  }\n\n  filter() {\n    const mortyData = this.state.data;\n    const value = this.inputValue;\n    const filterMortyCard = mortyData.filter((cardFiltred) =>\n      cardFiltred.name.toUpperCase().includes(value.toUpperCase())\n    );\n    // filterMortyCard = mortyData.filter((cardFiltred) => { return cardFiltred.name.toUpperCase().includes(value.toUpperCase())\n    // });\n    this.setState({\n      data: filterMortyCard,\n    });\n    console.log(filterMortyCard);\n  } // No me lee el array!!!!\n\n  render() {\n    // // Pasamos los datos del archivo json a través del estado del componente y luego por props a su componente hijo\n    const MortyData = this.state.data;\n    const inputValue = this.state.imputValue;\n    return (\n      <>\n        <CharacterList\n          dataMortylist={MortyData} // para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n          //inputValue={inputValue} // para pasar a characteres list el estado\n        />\n\n        <Filters\n          inputValue={inputValue}\n          handleInput={this.handleInput} //props para que filer avise a app del evento\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}