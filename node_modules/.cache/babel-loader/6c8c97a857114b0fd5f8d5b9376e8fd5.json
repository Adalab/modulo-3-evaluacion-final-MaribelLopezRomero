{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adalaber/Escritorio/Adalab/modulo-3-evaluacion-final-MaribelLopezRomero/src/components/App.js\";\nimport React from 'react';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/Fetch';\nimport CharacterList from './CharacterList';\nimport Filters from './Filter';\nimport { Route, Switch } from 'react-router-dom';\nimport CharacterDetail from './CharacterDetail';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      data: [],\n      dataFilter: []\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.filter = this.filter.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n  }\n\n  componentDidMount() {\n    getDataFromApi().then(data => {\n      console.log(data.results);\n      this.setState({\n        data: data.results\n      }, () => this.filter());\n    });\n  } //Filtro\n\n\n  handleInput(value) {\n    this.setState({\n      inputValue: value\n    }, () => this.filter());\n  }\n\n  filter() {\n    console.log(this.state.inputValue); // this.state.dataFilter.length === 0 ? <p>No hay ningún personaje que coincida con la\n    // palabra {this.state.data.inputValue}</p>\n    // this.state.dataFilter.inputValue !== this.state.dataFilter.name\n\n    if (this.state.dataFilter === 0) {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: [\"No hay ning\\xFAn personaje que coincida con la palabra\", this.state.data.inputValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this);\n    } else {\n      const filterMortyCard = this.state.data.filter(cardFiltred => cardFiltred.name.toLowerCase().includes(this.state.inputValue.toLowerCase()));\n      this.setState({\n        dataFilter: filterMortyCard\n      });\n    }\n  } // pitamos la tarjeta de detalles, para ello en la rruta que queremos que aparezca declaramos la fucion que pinta los datos, despues con un find, decimos que compare la ruta que hemos puesto (nombre., nickname) con los datos dentro del array incial(name)\n\n\n  renderCharacterDetail(props) {\n    const id = parseInt(props.match.params.id);\n    const dataObj = this.state.data.find(cardDetail => {\n      return cardDetail.id === id;\n    });\n\n    if (dataObj) {\n      return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n        data: dataObj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this);\n    } else {\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: \"Este personaje no existe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n  render() {\n    // // Pasamos los datos del archivo json a través del estado del componente y luego por props a su componente hijo\n    const MortyDataFilter = this.state.dataFilter;\n    const inputValue = this.state.imputValue;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Filters, {\n            inputValue: inputValue,\n            handleInput: this.handleInput //props para que filer avise a app del evento\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CharacterList, {\n            dataMortylist: MortyDataFilter // para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:id\",\n          render: this.renderCharacterDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adalaber/Escritorio/Adalab/modulo-3-evaluacion-final-MaribelLopezRomero/src/components/App.js"],"names":["React","getDataFromApi","CharacterList","Filters","Route","Switch","CharacterDetail","App","Component","constructor","props","state","inputValue","data","dataFilter","handleInput","bind","filter","renderCharacterDetail","componentDidMount","then","console","log","results","setState","value","filterMortyCard","cardFiltred","name","toLowerCase","includes","id","parseInt","match","params","dataObj","find","cardDetail","render","MortyDataFilter","imputValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/Fetch';\nimport CharacterList from './CharacterList';\nimport Filters from './Filter';\nimport { Route, Switch } from 'react-router-dom';\nimport CharacterDetail from './CharacterDetail';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      data: [],\n      dataFilter: [],\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.filter = this.filter.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n  }\n\n  componentDidMount() {\n    getDataFromApi().then((data) => {\n      console.log(data.results);\n      this.setState(\n        {\n          data: data.results,\n        },\n        () => this.filter()\n      );\n    });\n  }\n\n  //Filtro\n  handleInput(value) {\n    this.setState(\n      {\n        inputValue: value,\n      },\n      () => this.filter()\n    );\n  }\n\n  filter() {\n    console.log(this.state.inputValue);\n\n    // this.state.dataFilter.length === 0 ? <p>No hay ningún personaje que coincida con la\n    // palabra {this.state.data.inputValue}</p>\n    // this.state.dataFilter.inputValue !== this.state.dataFilter.name\n\n    if (this.state.dataFilter === 0) {\n      <p>\n        No hay ningún personaje que coincida con la palabra\n        {this.state.data.inputValue}\n      </p>;\n    } else {\n      const filterMortyCard = this.state.data.filter((cardFiltred) =>\n        cardFiltred.name\n          .toLowerCase()\n          .includes(this.state.inputValue.toLowerCase())\n      );\n      this.setState({ dataFilter: filterMortyCard });\n    }\n  }\n  // pitamos la tarjeta de detalles, para ello en la rruta que queremos que aparezca declaramos la fucion que pinta los datos, despues con un find, decimos que compare la ruta que hemos puesto (nombre., nickname) con los datos dentro del array incial(name)\n  renderCharacterDetail(props) {\n    const id = parseInt(props.match.params.id);\n    const dataObj = this.state.data.find((cardDetail) => {\n      return cardDetail.id === id;\n    });\n    if (dataObj) {\n      return <CharacterDetail data={dataObj} />;\n    } else {\n      return \n      <p>Este personaje no existe</p>;\n    }\n  }\n\n  render() {\n    // // Pasamos los datos del archivo json a través del estado del componente y luego por props a su componente hijo\n    const MortyDataFilter = this.state.dataFilter;\n    const inputValue = this.state.imputValue;\n    return (\n      <>\n        <Switch>\n          <Route exact path='/'>\n            <Filters\n              inputValue={inputValue}\n              handleInput={this.handleInput} //props para que filer avise a app del evento\n            />\n            <CharacterList\n              dataMortylist={MortyDataFilter} // para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n            />\n          </Route>\n          <Route path='/:id' render={this.renderCharacterDetail} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}