{"ast":null,"code":"import React from 'react';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/Fetch';\n;\nimport CharacterList from './CharacterList';\nimport Filters from './Filter';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //inputValue: '',\n      data: fecth.results\n    }; // this.handleInput = this.handleInput.bind(this);\n    // this.filter= this.filter.bind(this);\n  } //pintar la lista\n  // renderList () {\n  //   fetchResult ()\n  //   .then(data => {\n  //     console.log(data.results)\n  //   this.setState({\n  //     data: data.results\n  //   })\n  //   })\n  // }\n  //lifttin, evento de filtrado\n  // handleInput(value) {\n  //   this.setState({\n  //     inputValue: value,\n  //   });\n  //   //para filtrar\n  //   // const data = this.state.data\n  //   // if (this.state.inputvalue !== null) {\n  //   //   const mortyData = this.state.data;\n  //   //   const filterMortyCard = mortyData.filter((cardFiltred) =>\n  //   //     cardFiltred.name.toUpperCase().includes(value.toUpperCase())\n  //   //   );\n  //   //   this.setState({\n  //   //     data: filterMortyCard,\n  //   //   });\n  //   // }\n  //   // if (this.state.inputValue === '') {\n  //   //   this.setState({\n  //   //     data: fecth.results,\n  //   //   });\n  //   // }\n  //   // console.log (fecth.results);\n  // }\n  // filter() {\n  //   const mortyData = this.state.data;\n  //   const value = this.inputValue;\n  //   const filterMortyCard = mortyData.filter((cardFiltred) => cardFiltred.name.toUpperCase().includes(value.toUpperCase())\n  //   );\n  //   this.setState({\n  //     data: filterMortyCard,\n  //   });  \n  //   console.log (filterMortyCard )\n  // } // No me lee el array!!!!\n\n\n  render() {// // Pasamos los datos del archivo json a través del estado del componente y luego por props a su componente hijo\n    // const MortyData = this.state.data;\n    // const inputValue = this.state.imputValue;\n    // return (\n    //   <>\n    //     <CharacterList\n    //       dataMortylist={MortyData} // para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n    //       // inputValue={inputValue} // para pasar a characteres list el estado\n    //     />\n    //     <Filters\n    //       inputValue={inputValue}\n    //       handleInput={this.handleInput} //props para que filer avise a app del evento\n    //     />\n    //   </>\n    // );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/adalaber/Escritorio/Evaluacion Intermedia 3/version 2/Evaluacion intermedia version 2/src/components/App.js"],"names":["React","getDataFromApi","CharacterList","Filters","App","Component","constructor","props","state","data","fecth","results","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAA+C;AAC/C,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,UAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,IAAI,EAAEC,KAAK,CAACC;AAFD,KAAb,CAFiB,CAMjB;AACA;AACD,GAT+B,CAUhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIAC,EAAAA,MAAM,GAAG,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD;;AA3E+B;;AA8ElC,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/Fetch';;\nimport CharacterList from './CharacterList';\nimport Filters from './Filter';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //inputValue: '',\n      data: fecth.results,\n    };\n    // this.handleInput = this.handleInput.bind(this);\n    // this.filter= this.filter.bind(this);\n  }\n  //pintar la lista\n  // renderList () {\n  //   fetchResult ()\n  //   .then(data => {\n  //     console.log(data.results)\n  //   this.setState({\n  //     data: data.results\n  //   })\n  //   })\n  // }\n\n  //lifttin, evento de filtrado\n  // handleInput(value) {\n  //   this.setState({\n  //     inputValue: value,\n  //   });\n  //   //para filtrar\n  //   // const data = this.state.data\n  //   // if (this.state.inputvalue !== null) {\n  //   //   const mortyData = this.state.data;\n  //   //   const filterMortyCard = mortyData.filter((cardFiltred) =>\n  //   //     cardFiltred.name.toUpperCase().includes(value.toUpperCase())\n  //   //   );\n  //   //   this.setState({\n  //   //     data: filterMortyCard,\n  //   //   });\n  //   // }\n  //   // if (this.state.inputValue === '') {\n  //   //   this.setState({\n  //   //     data: fecth.results,\n  //   //   });\n  //   // }\n  //   // console.log (fecth.results);\n  // }\n\n  // filter() {\n  //   const mortyData = this.state.data;\n  //   const value = this.inputValue;\n  //   const filterMortyCard = mortyData.filter((cardFiltred) => cardFiltred.name.toUpperCase().includes(value.toUpperCase())\n  //   );\n  //   this.setState({\n  //     data: filterMortyCard,\n  //   });  \n  //   console.log (filterMortyCard )\n  // } // No me lee el array!!!!\n\n  \n\n  render() {\n    // // Pasamos los datos del archivo json a través del estado del componente y luego por props a su componente hijo\n    // const MortyData = this.state.data;\n    // const inputValue = this.state.imputValue;\n    // return (\n    //   <>\n    //     <CharacterList\n    //       dataMortylist={MortyData} // para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n    //       // inputValue={inputValue} // para pasar a characteres list el estado\n    //     />\n\n    //     <Filters\n    //       inputValue={inputValue}\n    //       handleInput={this.handleInput} //props para que filer avise a app del evento\n    //     />\n    //   </>\n    // );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}