{"version":3,"sources":["services/Fetch.js","components/CharacterCard.js","components/CharacterList.js","components/Filter.js","components/CharacterDetail.js","components/CharacterNotFound.js","images/Logo.png","components/Header.js","components/CharacterNotExItst.js","components/App.js","reportWebVitals.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","CharacterCard","to","this","props","id","className","src","image","alt","name","title","species","React","Component","CharacterList","itemsMortyCards","dataMortylist","map","card","Filter","searchCharacter","bind","handleFormSubmit","event","value","target","handleInput","preventDefault","onSubmit","htmlFor","placeholder","type","inputValue","onChange","CharacterDetail","console","log","data","episode","status","origin","length","CharacterNotFound","Header","logo","CharacterNotExist","App","state","dataFilter","textAlert","filter","renderCharacterDetail","results","setState","filterMortyCard","cardFiltred","toLowerCase","includes","parseInt","match","params","dataObj","find","cardDetail","MortyDataFilter","imputValue","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fa7acc8.chunk.js","sourcesContent":["const getDataFromApi = () =>\n  fetch('https://rickandmortyapi.com/api/character/').then((response) =>\n    response.json()\n  );\n\nexport default getDataFromApi;\n\n// const getDataFromApi = () => {\n//     return fetch('https://rickandmortyapi.com/api/character/')\n//       .then(response => response.json())\n//       .then(data => {\n//         return data.results;\n//       });\n//   };\n\n//   export default {\n//     getDataFromApi: getDataFromApi\n//   };","import React from 'react';\nimport '../stylesheets/CharacterCard.scss';\nimport { Link } from 'react-router-dom';\n\nclass CharacterCard extends React.Component {\n  render() {\n    // console.log (this.props.id)\n    // console.log (this.props.name)\n    return (\n      <Link to={'/' + this.props.id}>\n        <article className=''>\n          <img className = \"card_imagen\"\n            src={this.props.image}\n            alt={this.props.name}\n            title={this.props.name}\n          />\n          <h2 className = \"card_title\">{this.props.name}</h2>\n          <h3 className = \"card_subtitle\">{this.props.species}</h3>\n        </article>\n      </Link>\n    );\n  }\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport '../stylesheets/CharacterList.scss';\nimport CharacterCard from './CharacterCard';\n\nclass CharacterList extends React.Component {\n  render() {\n    //para pintar la lista\n    const mortyCards = this.props.dataMortylist; //props que me pasa el array de datos\n    const itemsMortyCards = mortyCards.map((card) => {\n      return (\n        <li className = \"card\" key={card.id}>\n          <CharacterCard\n            name={card.name}\n            image={card.image}\n            species={card.species}\n            id={card.id}\n          />\n        </li>\n      );\n    });\n\n    return (\n      <>\n        <section>\n          <ul className ='list'>{itemsMortyCards}</ul>\n        </section>\n      </>\n    );\n  }\n}\n\nexport default CharacterList;\n","import React from 'react';\nimport '../stylesheets/Filter.scss';\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.searchCharacter = this.searchCharacter.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n  searchCharacter(event) {\n    const value = event.target.value;\n    this.props.handleInput(value); //funcion que avisa a app de que se activa el evento\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n   \n  }\n  render() {\n    return (\n      <form className = \"form\" onSubmit={this.handleFormSubmit}>\n        <label htmlFor='title'></label>\n        <input className = \"form_input\"\n          placeholder='Â¿A quien estas buscando?'\n          type='text'\n          id='title'\n          name='title'\n          value={this.props.inputValue} // pasa por props el nuevo valor del imput (el que el usuario busca)\n          onChange={this.searchCharacter} //Evento para el filtrado.\n        />\n      </form>\n    );\n  }\n}\n\nexport default Filter;\n","import {Link} from 'react-router-dom';\nimport React from 'react';\nimport '../stylesheets/CharacterDetail.scss';\n\n// class CharacterDetail extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n\n//   render() {\n//     // const {name, image, species, status, origin} = this.props.data;\n//     return (\n//       <>\n//         <div>\n//           <img\n//             src={this.props.image}\n//             alt={this.props.name}\n//             title={this.props.name}\n//           />\n//           <h2>{this.props.name}</h2>\n//           <h2>{this.props.species}</h2>\n//           <h2>{this.props.episode}</h2>\n//           <h2>{this.props.status}</h2>\n//           <h2>{this.props.origin.name}</h2>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default CharacterDetail;\n\nconst CharacterDetail = (props) => {\n    console.log (props)\n  const { name, image, species, episode, status, origin } = props.data;\n  return (\n    <>\n      <article className= \"cardDetail\">\n        <img className = \"cardDetail_imagen\"src={image} alt={name} title={name} />\n        <h2 className= \"cardDetail_title\">Name: {name}</h2>\n        <h2> Specie: {species}</h2>\n        <h2>Episodes: {episode.length}</h2>\n        <h2>Status: {status}</h2>\n        <h2>Origin: {origin.name}</h2>\n     \n      <Link to='/'>\n        <button className = \"cardButton\">Volver</button>\n      </Link> \n      </article>\n    </>\n  );\n};\nexport default CharacterDetail;\n","import React from 'react';\nimport '../stylesheets/CharacterNotFound.scss';\n\n\nclass CharacterNotFound extends React.Component {\n  render() {\n    return (\n      <p className= \"notFound\">\n        {this.props.value}\n      </p>\n\n    );\n  }\n}\n\nexport default CharacterNotFound;\n","export default __webpack_public_path__ + \"static/media/Logo.de13d484.png\";","\nimport React from 'react';\nimport '../stylesheets/Header.scss';\nimport logo from '../images/Logo.png'\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n      <header className= \"header\">\n      <h1 className= \"header_title\"><img className= \"header_imagen\" src={logo}/></h1>\n      </header>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport '../stylesheets/App.scss';\nimport { Link } from 'react-router-dom';\n\nclass CharacterNotExist extends React.Component {\n  render() {\n    return (\n      <article>\n        <p>El personaje que buscas no existe</p>\n        <Link to='/' title='Volver al listado'>\n          <button>Volver</button>\n        </Link>\n      </article>\n    );\n  }\n}\n\nexport default CharacterNotExist;\n","import React from 'react';\nimport '../stylesheets/App.scss';\nimport getDataFromApi from '../services/Fetch';\nimport CharacterList from './CharacterList';\nimport Filters from './Filter';\nimport { Route, Switch } from 'react-router-dom';\nimport CharacterDetail from './CharacterDetail';\nimport CharacterNotFound from './CharacterNotFound';\nimport Header from './Header';\nimport CharacterNotExist from './CharacterNotExItst';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      data: [],\n      dataFilter: [],\n      textAlert: '',\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.filter = this.filter.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n  }\n\n  componentDidMount() {\n    getDataFromApi().then((data) => {\n      console.log(data.results);\n      this.setState(\n        {\n          data: data.results,\n        },\n        () => this.filter()\n      );\n    });\n  }\n\n  //evento de filtrado\n  handleInput(value) {\n    this.setState(\n      {\n        inputValue: value,\n      },\n      () => this.filter()\n    );\n  }\n\n  filter() {\n    console.log(this.state.inputValue);\n    const filterMortyCard = this.state.data.filter((cardFiltred) =>\n      cardFiltred.name\n        .toLowerCase()\n        .includes(this.state.inputValue.toLowerCase())\n    );\n    this.setState({ dataFilter: filterMortyCard });\n    //Preguntar como hacer que funcione desde aqui y no desde app\n    if (filterMortyCard.length === 0) {\n      this.setState({\n        textAlert: `No hay ningÃºn personaje que coincida con la palabra ${this.state.inputValue}`,\n      });\n    }\n  }\n\n  // pitamos la tarjeta de detalles, para ello en la rruta que queremos que aparezca declaramos la fucion que pinta los datos, despues con un find, decimos que compare la ruta que hemos puesto (nombre., nickname) con los datos dentro del array incial(name)\n  renderCharacterDetail(props) {\n    console.log(props);\n    const id = parseInt(props.match.params.id);\n    const dataObj = this.state.data.find((cardDetail) => {\n      return cardDetail.id === id;\n    });\n    if (dataObj) {\n      return <CharacterDetail data={dataObj} />;\n    } else {\n      return <CharacterNotExist />;\n    }\n  }\n\n  render() {\n    // // Pasamos los datos del archivo json a travÃ©s del estado del componente y luego por props a su componente hijo\n    const MortyDataFilter = this.state.dataFilter;\n    const inputValue = this.state.imputValue;\n    return (\n      <>\n        <Header />\n        <Switch>\n          <Route exact path='/'>\n            <Filters\n              inputValue={inputValue}\n              handleInput={this.handleInput} //props para que filer avise a app del evento\n            />\n            {this.state.dataFilter.length === 0 ? (\n              <CharacterNotFound value={this.state.textAlert} />\n            ) : (\n              <CharacterList\n                dataMortylist={MortyDataFilter} // para filtrar tengo que pasarte el estado, donde se guardara el array completo y el filtrado en funcion de si tengo algo en el value o no\n              />\n            )}\n          </Route>\n          <Route path='/:id' render={this.renderCharacterDetail} />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}